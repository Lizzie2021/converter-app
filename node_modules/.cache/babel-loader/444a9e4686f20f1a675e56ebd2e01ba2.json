{"ast":null,"code":"import _slicedToArray from \"/Users/yuanbodeng/Desktop/Apps/React/converter-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/yuanbodeng/Desktop/Apps/React/converter-app/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      decimal = _useState2[0],\n      setDecimal = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      binary = _useState4[0],\n      setBinary = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      hexadecimal = _useState6[0],\n      setHexadecimal = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      type = _useState8[0],\n      setType = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      binaryStr = _useState10[0],\n      setBinaryStr = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      hexaStr = _useState12[0],\n      setHexaStr = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      decimalNum = _useState14[0],\n      setDecimalNum = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      decimalNumber = _useState16[0],\n      setDecimalNumber = _useState16[1];\n\n  function handleInput(event) {\n    setDecimal(event.target.value);\n    setType(\"\");\n    setBinary(\"\");\n    setHexadecimal(\"\");\n  }\n\n  function handleRadio(event) {\n    var value = event.target.value;\n    setType(value);\n  }\n\n  function convertDtoBH() {\n    if (type === \"binary\") {\n      var binStr = Number(decimal).toString(2);\n      setBinary(binStr);\n    } else if (type === \"hexadecimal\") {\n      var hexStr = Number(decimal).toString(16).toUpperCase();\n      setHexadecimal(hexStr);\n    }\n  }\n\n  function handleInputBinary(event) {\n    setBinaryStr(event.target.value);\n    setDecimalNum(\"\");\n  }\n\n  function handleInputHexa(event) {\n    setHexaStr(event.target.value);\n    setDecimalNumber(\"\");\n  }\n\n  function convertBtoD() {\n    setDecimalNum(parseInt(binaryStr, 2));\n  }\n\n  function convertHtoD() {\n    setDecimalNumber(parseInt(hexaStr, 16));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Decimal to Binary / Hexadecimal :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Decimal\",\n        onChange: handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radio\",\n        onChange: handleRadio,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"convertDecimalTo\",\n            value: \"binary\",\n            checked: type === \"binary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), \"Binary\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"convertDecimalTo\",\n            value: \"hexadecimal\",\n            checked: type === \"hexadecimal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), \"Hexadecimal\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"firstButton\",\n          onClick: convertDtoBH,\n          children: \"convert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [type === \"binary\" && binary, type === \"hexadecimal\" && hexadecimal]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"hr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Binary to Decimal :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"binary\",\n        placeholder: \"Binary\",\n        onChange: handleInputBinary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: convertBtoD,\n        children: \"convert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: decimalNum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Hexadecimal to Decimal :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"hexa\",\n        placeholder: \"Hexadecimal\",\n        onChange: handleInputHexa\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: convertHtoD,\n        children: \"convert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: decimalNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"sQ56aDL1xNEQKj6lR6+EwFVlXjk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/yuanbodeng/Desktop/Apps/React/converter-app/src/components/App.jsx"],"names":["React","useState","Header","Footer","App","decimal","setDecimal","binary","setBinary","hexadecimal","setHexadecimal","type","setType","binaryStr","setBinaryStr","hexaStr","setHexaStr","decimalNum","setDecimalNum","decimalNumber","setDecimalNumber","handleInput","event","target","value","handleRadio","convertDtoBH","binStr","Number","toString","hexStr","toUpperCase","handleInputBinary","handleInputHexa","convertBtoD","parseInt","convertHtoD"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\nfunction App() {\n  const [decimal, setDecimal] = useState();\n  const [binary, setBinary] = useState();\n  const [hexadecimal, setHexadecimal] = useState();\n  const [type, setType] = useState();\n  const [binaryStr, setBinaryStr] = useState();\n  const [hexaStr, setHexaStr] = useState();\n  const [decimalNum, setDecimalNum] = useState();\n  const [decimalNumber, setDecimalNumber] = useState();\n  function handleInput(event) {\n    setDecimal(event.target.value);\n    setType(\"\");\n    setBinary(\"\");\n    setHexadecimal(\"\");\n  }\n\n  function handleRadio(event) {\n    const { value } = event.target;\n    setType(value);\n  }\n\n  function convertDtoBH() {\n    if (type === \"binary\") {\n      let binStr = Number(decimal).toString(2);\n      setBinary(binStr);\n    } else if (type === \"hexadecimal\") {\n      let hexStr = Number(decimal).toString(16).toUpperCase();\n      setHexadecimal(hexStr);\n    }\n  }\n\n  function handleInputBinary(event) {\n    setBinaryStr(event.target.value);\n\n    setDecimalNum(\"\");\n  }\n  function handleInputHexa(event) {\n    setHexaStr(event.target.value);\n\n    setDecimalNumber(\"\");\n  }\n\n  function convertBtoD() {\n    setDecimalNum(parseInt(binaryStr, 2));\n  }\n\n  function convertHtoD() {\n    setDecimalNumber(parseInt(hexaStr, 16));\n  }\n  return (\n    <div>\n      <Header />\n      <div className=\"container\">\n        <h2>Decimal to Binary / Hexadecimal :</h2>\n        <input type=\"number\" placeholder=\"Decimal\" onChange={handleInput} />\n        <div className=\"radio\" onChange={handleRadio}>\n          <span>\n            <input\n              type=\"radio\"\n              name=\"convertDecimalTo\"\n              value=\"binary\"\n              checked={type === \"binary\"}\n            />\n            Binary\n          </span>\n          <span>\n            <input\n              type=\"radio\"\n              name=\"convertDecimalTo\"\n              value=\"hexadecimal\"\n              checked={type === \"hexadecimal\"}\n            />\n            Hexadecimal\n          </span>\n\n          <button className=\"firstButton\" onClick={convertDtoBH}>\n            convert\n          </button>\n        </div>\n\n        <h1>\n          {type === \"binary\" && binary}\n          {type === \"hexadecimal\" && hexadecimal}\n        </h1>\n        <hr className=\"hr\" />\n        <h2>Binary to Decimal :</h2>\n\n        <input\n          type=\"text\"\n          name=\"binary\"\n          placeholder=\"Binary\"\n          onChange={handleInputBinary}\n        />\n        <button onClick={convertBtoD}>convert</button>\n        <h1>{decimalNum}</h1>\n        <h2>Hexadecimal to Decimal :</h2>\n        <input\n          type=\"text\"\n          name=\"hexa\"\n          placeholder=\"Hexadecimal\"\n          onChange={handleInputHexa}\n        />\n        <button onClick={convertHtoD}>convert</button>\n        <h1>{decimalNumber}</h1>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}